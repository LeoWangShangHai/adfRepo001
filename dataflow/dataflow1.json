{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataDestination_New1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "\n\nsource(output(\n\t\tStockGroupName as string,\n\t\tLineProfit as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 select(mapColumn(\n\t\tStockGroupName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(StockGroupName = StockGroupName,\n\t\tCurrentDate = currentDate()) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(StockGroupName),\n\tcount = countDistinct(StockGroupName)) ~> Aggregate1\nAggregate1 sink(input(\n\t\tStockGroupName as string,\n\t\tLineProfit as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tStockGroupName,\n\t\tLineProfit = count\n\t)) ~> sink1"
		}
	}
}